{"version":3,"sources":["components/feedback/feedbackComps/Statistics.js","components/feedback/feedbackComps/Buttons.js","components/feedback/Feedback.js","components/telBook/telInput/TelInput.js","components/telBook/telInput/ContactList.js","components/telBook/telInput/FindInput.js","components/telBook/TelBook.js","components/App.js","index.js"],"names":["Statistics","prop","good","neutral","bad","total","positivePercentage","onClick","goodIncrement","neutralIncrement","badIncrement","Feedback","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","positive","drowStat","this","Buttons","Component","TelInput","TextField","style","width","margin","id","label","name","variant","onChange","value","ContactList","key","contactsList","number","FindInput","TelBook","contacts","filter","handleChange","target","handleSubmit","evt","preventDefault","find","el","alert","uuidv4","handleFilter","findContact","handleDelete","console","log","filterarr","toLowerCase","filterName","includes","noValidate","autoComplete","onSubmit","type","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.225dbf52.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nfunction Statistics(prop) {\r\n  return (\r\n    <Fragment>\r\n      <p>Good: {prop.good}</p>\r\n      <p>Neutral: {prop.neutral}</p>\r\n      <p>Bad: {prop.bad}</p>\r\n      <p>Total: {prop.total}</p>\r\n      <p>Positive feedback: {prop.positivePercentage}%</p>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { Fragment } from \"react\";\r\n\r\nfunction Statistics(prop) {\r\n  return (\r\n    <Fragment>\r\n      <button onClick={prop.goodIncrement}>Good</button>\r\n      <button onClick={prop.neutralIncrement}>Neutral</button>\r\n      <button onClick={prop.badIncrement}>Bad</button>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport Statistics from \"./feedbackComps/Statistics\";\r\nimport Buttons from \"./feedbackComps/Buttons\";\r\n\r\nexport class Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  goodIncrement = () => {\r\n    this.setState((prevState) => {\r\n      return { good: prevState.good + 1 };\r\n    }, this.countTotalFeedback);\r\n  };\r\n\r\n  neutralIncrement = () => {\r\n    this.setState((prevState) => {\r\n      return { neutral: prevState.neutral + 1 };\r\n    }, this.countTotalFeedback);\r\n  };\r\n  badIncrement = () => {\r\n    this.setState((prevState) => {\r\n      return { bad: prevState.bad + 1 };\r\n    }, this.countTotalFeedback);\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    this.setState({ total: total }, this.countPositiveFeedbackPercentage);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positive = (this.state.good * 100) / this.state.total;\r\n    this.setState({ positive: positive });\r\n  };\r\n\r\n  render() {\r\n    let drowStat;\r\n    if (\r\n      this.state.good === 0 &&\r\n      this.state.neutral === 0 &&\r\n      this.state.bad === 0\r\n    ) {\r\n      drowStat = <p>No feedback given</p>;\r\n    } else {\r\n      drowStat = (\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          total={this.state.total}\r\n          positivePercentage={this.state.positive}\r\n        ></Statistics>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2>Please leave feedback</h2>\r\n        <Buttons\r\n          goodIncrement={this.goodIncrement}\r\n          neutralIncrement={this.neutralIncrement}\r\n          badIncrement={this.badIncrement}\r\n        ></Buttons>\r\n        <h2>Statistics</h2>\r\n        {drowStat}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport function TelInput(prop) {\r\n  return (\r\n    <>\r\n      <TextField\r\n        style={{ width: 200, margin: 10 }}\r\n        id=\"outlined-basic\"\r\n        label={prop.name}\r\n        variant=\"outlined\"\r\n        name={prop.name}\r\n        onChange={prop.onChange}\r\n        value={prop.value}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ContactList(prop) {\r\n  return (\r\n    <>\r\n      <li key={prop.contactsList.id}>\r\n        {prop.contactsList.name}: {prop.contactsList.number}\r\n        <button onClick={() => prop.onClick(prop.contactsList.id)}>\r\n          DELETE\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport function FindInput(prop) {\r\n  return (\r\n    <>\r\n      <TextField\r\n        style={{ width: 200 }}\r\n        id=\"outlined-basic\"\r\n        label=\"filter\"\r\n        variant=\"outlined\"\r\n        name=\"filter\"\r\n        onChange={prop.onChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TelInput } from \"./telInput/TelInput\";\r\nimport { ContactList } from \"./telInput/ContactList\";\r\nimport { FindInput } from \"./telInput/FindInput\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport class TelBook extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const lookingFor = this.state.contacts.find(\r\n      (el) => el.name === this.state.name\r\n    );\r\n    if (lookingFor) {\r\n      alert(\"This user already in contact list\");\r\n      this.setState({ name: \"\", number: \"\" });\r\n    } else {\r\n      this.setState({\r\n        contacts: [\r\n          ...this.state.contacts,\r\n          { id: uuidv4(), name: this.state.name, number: this.state.number },\r\n        ],\r\n      });\r\n      this.setState({ name: \"\", number: \"\" });\r\n    }\r\n  };\r\n\r\n  handleFilter = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value }, this.findContact);\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    console.log(id);\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((el) => el.id !== id),\r\n    }));\r\n    console.log();\r\n  };\r\n\r\n  render() {\r\n    const filterarr = this.state.contacts.filter((el) => {\r\n      const name = el.name.toLowerCase();\r\n      const filterName = this.state.filter.toLowerCase();\r\n      if (name.includes(filterName)) {\r\n        return el;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <h2>Name</h2>\r\n        <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n          <TelInput\r\n            name={\"name\"}\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n          <TelInput\r\n            name={\"number\"}\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n\r\n          <button type=\"input\">Add contact</button>\r\n        </form>\r\n        <h2>Contacts</h2>\r\n        <h3>Find contacts by name</h3>\r\n        <FindInput onChange={this.handleFilter} />\r\n        <ul>\r\n          {filterarr.map((el) => (\r\n            <ContactList contactsList={el} onClick={this.handleDelete} />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Feedback } from \"./feedback/Feedback\";\r\nimport { TelBook } from \"./telBook/TelBook\";\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <Feedback />\r\n      <TelBook />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}